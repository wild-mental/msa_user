name: Build and Push Docker Image

on:
  push:
    branches:
      - main # main 브랜치에 푸시될 때 트리거
      - release/** # release/ 하위 브랜치에 푸시될 때 트리거

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1. GitHub Repository Checkout
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Set up Java 17
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Install dependencies and run tests
      - name: Install dependencies and run tests
        run: |
          ./gradlew bootJar --no-daemon

      # 4. Determine Docker tag
      - name: Determine Docker tag
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "DOCKER_TAG=latest" >> $GITHUB_ENV
          else
            echo "DOCKER_TAG=${GITHUB_REF#refs/heads/release/}" >> $GITHUB_ENV
          fi

      # 5. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }} # Docker Hub 사용자 이름 (GitHub Secrets에 설정 필요)
          password: ${{ secrets.DOCKER_PASS }} # Docker Hub 비밀번호 (GitHub Secrets에 설정 필요)

      # 6. Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USER }}/msa_svc_user:${{ env.DOCKER_TAG }} .

      # 7. Push Docker Image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USER }}/msa_svc_user:${{ env.DOCKER_TAG }}
